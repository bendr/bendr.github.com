<app xmlns="http://bender.igel.co.jp" xmlns:f="http://bender.igel.co.jp/f"
  xmlns:svg="http://www.w3.org/2000/svg"
  f:cols="20" f:rows="24" f:columnOffset="60" f:rowOffset="30"
  f:rotationIncrement="0.15">

  <title>Waves</title>

  <!-- SVG version of:
    Parameterize: Wave
    from Form+Code in Design, Art, and Architecture
    by Casey Reas, Chandler McWilliams, and LUST
    Princeton Architectural Press, 2010
    ISBN 9781568989372
    cf. http://formandcode.com/code-examples/parameterize-waves -->

  <view>
    <svg:svg viewBox="0 0 1200 768" style="background-color: white">
      <svg:defs>
        <svg:rect svg:id="rect" x="-20" y="-7.5" width="40" height="15"
          fill="none" stroke="black"/>
      </svg:defs>
      <svg:g transform="translate(30, 30)"/>
    </svg:svg>
  </view>

  <watch>
    <get use="$self" property="cols"/>
    <get use="$self" property="rows"/>
    <set><![CDATA[

      var QUARTER_PI = Math.PI / 4;

      var g = this.component.querySelector("g");
      flexo.remove_children(g);
      for (var i = 0; i < this.properties.cols; ++i) {
        var col = this.component.$("svg:g", { transform: "translate({0})"
          .fmt(i * this.properties.columnOffset) });
        g.appendChild(col);
        var r = QUARTER_PI - Math.random() * Math.PI / 2;
        var dir = 1;
        for (var j = 0; j < this.properties.rows; ++j) {
          col.appendChild(this.component.$("svg:use", { "xlink:href": "#rect",
            transform: "translate(0, {0}) rotate({1})"
              .fmt(j * this.properties.rowOffset, r / Math.PI * 180) }));
          r += dir * this.properties.rotationIncrement;
          if (r > QUARTER_PI || r < -QUARTER_PI) dir *= -1;
        }
      }

    ]]></set>
  </watch>


</app>
